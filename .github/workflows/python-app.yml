# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: AOGet CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env: 
      DISPLAY: ':99.0'
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore F821
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - uses: tlambert03/setup-qt-libs@v1
    - name: build "display"
      run: |
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
#    - name: Install libegl1 needed by Qt
#      run: |
#        sudo apt-get update
#        sudo apt-get install -y libegl1
#    - name: Delete Qt tests as they don't run on GitHub's Ubuntu servers currently
#      run: |
#        rm -rf tests/test__qt*.py
    - name: Test with pytest
      run: |
        python3 -X faulthandler -m pytest -p no:faulthandler -x toad
    - name: Generate coverage report XML
      run:  |
        pip install pytest-cov
        python -m pytest --cov=aoget --cov-report=xml
        # show coverage report
    - name: Show coverage report summary
      run:  |
        python -m pytest --cov=aoget
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: kosaendre/aoget
